#include <iostream>
using namespace std;

bool hasSubsetSum(int arr[], int size, int targetSum, int Index) {
    
    if (targetSum == 0) {
        return true;
    }
    if (Index >= size || targetSum < 0) {
        return false;
    }

    bool includeCurrent = hasSubsetSum(arr, size, targetSum - arr[Index],Index + 1);

    bool excludeCurrent = hasSubsetSum(arr, size, targetSum,Index + 1);

    return includeCurrent || excludeCurrent;
}

bool hasSubsetSum(int arr[], int size, int targetSum) {
    return hasSubsetSum(arr, size, targetSum, 0);
}

int main() {
    int arr[] = {3, 34, 4, 12, 5, 2};
    int size = sizeof(arr) / sizeof(arr[0]);
    int targetSum = 9;

    if (hasSubsetSum(arr, size, targetSum)) {
    cout << "Subset with sum " << targetSum << " exists." << endl;
    } 
    else {
    cout << "No subset with sum " << targetSum << " exists." << endl;
    }

    return 0;
}
